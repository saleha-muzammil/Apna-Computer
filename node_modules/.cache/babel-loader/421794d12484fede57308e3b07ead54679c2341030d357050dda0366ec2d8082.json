{"ast":null,"code":"class CountryList {\n  constructor() {\n    this.data = require('./data.json');\n    this.labelMap = {};\n    this.valueMap = {};\n    this.data.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value;\n      this.valueMap[country.value.toLowerCase()] = country.label;\n    });\n  }\n  getValue(label) {\n    return this.labelMap[label.toLowerCase()];\n  }\n  getLabel(value) {\n    return this.valueMap[value.toLowerCase()];\n  }\n  getLabels() {\n    return this.data.map(country => country.label);\n  }\n  getValues() {\n    return this.data.map(country => country.value);\n  }\n  getLabelList() {\n    return this.labelMap;\n  }\n  getValueList() {\n    return this.valueMap;\n  }\n  getData() {\n    return this.data;\n  }\n  setLabel(value, label) {\n    this.data.forEach(country => {\n      if (country.value === value) {\n        country.label = label;\n        this.valueMap[country.value.toLowerCase()] = country.label;\n      }\n    });\n    return this;\n  }\n  setEmpty(label) {\n    this.data.unshift({\n      value: '',\n      label: label\n    });\n    this.valueMap[''] = label;\n    this.labelMap[label] = '';\n    return this;\n  }\n  native() {\n    this.nativeData = require('./data-native.json');\n    this.nativeData.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value;\n      this.valueMap[country.value.toLowerCase()] = country.label;\n    });\n    return this;\n  }\n}\nconst countryList = () => {\n  if (!(this instanceof CountryList)) return new CountryList();\n};\nmodule.exports = countryList;","map":{"version":3,"names":["CountryList","constructor","data","require","labelMap","valueMap","forEach","country","label","toLowerCase","value","getValue","getLabel","getLabels","map","getValues","getLabelList","getValueList","getData","setLabel","setEmpty","unshift","native","nativeData","countryList","module","exports"],"sources":["/home/saleha/Desktop/react/my-app/node_modules/react-select-country-list/country-list.js"],"sourcesContent":["class CountryList {\n  constructor() {\n    this.data = require('./data.json')\n    this.labelMap = {}\n    this.valueMap = {}\n\n    this.data.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value\n      this.valueMap[country.value.toLowerCase()] = country.label\n    })\n  }\n\n  getValue(label) {\n    return this.labelMap[label.toLowerCase()]\n  }\n\n  getLabel(value) {\n    return this.valueMap[value.toLowerCase()]\n  }\n\n  getLabels() {\n    return this.data.map(country => country.label)\n  }\n\n  getValues() {\n    return this.data.map(country => country.value)\n  }\n\n  getLabelList() {\n    return this.labelMap\n  }\n\n  getValueList() {\n    return this.valueMap\n  }\n\n  getData() {\n    return this.data\n  }\n\n  setLabel(value, label) {\n    this.data.forEach(country => {\n      if (country.value === value) {\n        country.label = label\n        this.valueMap[country.value.toLowerCase()] = country.label\n      }\n    })\n\n    return this\n  }\n\n  setEmpty(label) {\n    this.data.unshift({\n      value: '',\n      label: label,\n    })\n    this.valueMap[''] = label\n    this.labelMap[label] = ''\n\n    return this\n  }\n\n  native() {\n    this.nativeData = require('./data-native.json')\n    this.nativeData.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value\n      this.valueMap[country.value.toLowerCase()] = country.label\n    })\n\n    return this\n  }\n}\n\nconst countryList = () => {\n  if (!(this instanceof CountryList)) return new CountryList()\n}\n\nmodule.exports = countryList\n"],"mappings":"AAAA,MAAMA,WAAW,CAAC;EAChBC,WAAW,GAAG;IACZ,IAAI,CAACC,IAAI,GAAGC,OAAO,CAAC,aAAa,CAAC;IAClC,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAElB,IAAI,CAACH,IAAI,CAACI,OAAO,CAACC,OAAO,IAAI;MAC3B,IAAI,CAACH,QAAQ,CAACG,OAAO,CAACC,KAAK,CAACC,WAAW,EAAE,CAAC,GAAGF,OAAO,CAACG,KAAK;MAC1D,IAAI,CAACL,QAAQ,CAACE,OAAO,CAACG,KAAK,CAACD,WAAW,EAAE,CAAC,GAAGF,OAAO,CAACC,KAAK;IAC5D,CAAC,CAAC;EACJ;EAEAG,QAAQ,CAACH,KAAK,EAAE;IACd,OAAO,IAAI,CAACJ,QAAQ,CAACI,KAAK,CAACC,WAAW,EAAE,CAAC;EAC3C;EAEAG,QAAQ,CAACF,KAAK,EAAE;IACd,OAAO,IAAI,CAACL,QAAQ,CAACK,KAAK,CAACD,WAAW,EAAE,CAAC;EAC3C;EAEAI,SAAS,GAAG;IACV,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAACP,OAAO,IAAIA,OAAO,CAACC,KAAK,CAAC;EAChD;EAEAO,SAAS,GAAG;IACV,OAAO,IAAI,CAACb,IAAI,CAACY,GAAG,CAACP,OAAO,IAAIA,OAAO,CAACG,KAAK,CAAC;EAChD;EAEAM,YAAY,GAAG;IACb,OAAO,IAAI,CAACZ,QAAQ;EACtB;EAEAa,YAAY,GAAG;IACb,OAAO,IAAI,CAACZ,QAAQ;EACtB;EAEAa,OAAO,GAAG;IACR,OAAO,IAAI,CAAChB,IAAI;EAClB;EAEAiB,QAAQ,CAACT,KAAK,EAAEF,KAAK,EAAE;IACrB,IAAI,CAACN,IAAI,CAACI,OAAO,CAACC,OAAO,IAAI;MAC3B,IAAIA,OAAO,CAACG,KAAK,KAAKA,KAAK,EAAE;QAC3BH,OAAO,CAACC,KAAK,GAAGA,KAAK;QACrB,IAAI,CAACH,QAAQ,CAACE,OAAO,CAACG,KAAK,CAACD,WAAW,EAAE,CAAC,GAAGF,OAAO,CAACC,KAAK;MAC5D;IACF,CAAC,CAAC;IAEF,OAAO,IAAI;EACb;EAEAY,QAAQ,CAACZ,KAAK,EAAE;IACd,IAAI,CAACN,IAAI,CAACmB,OAAO,CAAC;MAChBX,KAAK,EAAE,EAAE;MACTF,KAAK,EAAEA;IACT,CAAC,CAAC;IACF,IAAI,CAACH,QAAQ,CAAC,EAAE,CAAC,GAAGG,KAAK;IACzB,IAAI,CAACJ,QAAQ,CAACI,KAAK,CAAC,GAAG,EAAE;IAEzB,OAAO,IAAI;EACb;EAEAc,MAAM,GAAG;IACP,IAAI,CAACC,UAAU,GAAGpB,OAAO,CAAC,oBAAoB,CAAC;IAC/C,IAAI,CAACoB,UAAU,CAACjB,OAAO,CAACC,OAAO,IAAI;MACjC,IAAI,CAACH,QAAQ,CAACG,OAAO,CAACC,KAAK,CAACC,WAAW,EAAE,CAAC,GAAGF,OAAO,CAACG,KAAK;MAC1D,IAAI,CAACL,QAAQ,CAACE,OAAO,CAACG,KAAK,CAACD,WAAW,EAAE,CAAC,GAAGF,OAAO,CAACC,KAAK;IAC5D,CAAC,CAAC;IAEF,OAAO,IAAI;EACb;AACF;AAEA,MAAMgB,WAAW,GAAG,MAAM;EACxB,IAAI,EAAE,IAAI,YAAYxB,WAAW,CAAC,EAAE,OAAO,IAAIA,WAAW,EAAE;AAC9D,CAAC;AAEDyB,MAAM,CAACC,OAAO,GAAGF,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}